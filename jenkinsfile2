pipeline {
    agent any
    
    tools {
        maven 'localMaven'
    }
    
    stages {
        stage('Clone') {
            steps {
                
                // get repos
                git 'https://github.com/georgio-tanios/maven-project.git'
            }
        }
        
        stage('compile'){
            steps{
                withMaven(maven:'localMaven')
                {
                    // sh "mvn compile" pour linux
                    bat "mvn compile"
                }
            }
        }
        
        stage('Test'){
            steps{
                withMaven(maven:'localMaven')
                {
                    // sh "mvn test" pour linux
                    bat "mvn test"
                }
            }
        }
        
        stage('Build'){
            steps{
                withMaven(maven:'localMaven')
                {
                    // sh "mvn package" pour linux
                    bat "mvn -B -DskipTests clean package"
                }
            }
        }
        
        stage('Build and send results Sonar'){
            steps{
                withSonarQubeEnv(installationName : 'localSonarQube', credentialsId: 'key4sonarqube')
                {
                    bat 'mvn -B -DskipTests clean package sonar:sonar'
                }
            }
        }
    }
}
